import React, { useState, useEffect } from "react";
import AuthContext from "./AuthContext";
import api from "../../services/authApi";

export default function AuthProvider({ children }) {
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // Generated by ChatGPT-04-mini-high - checks sessionStorage for user data if available, otherwise fetches from API
    const stored = sessionStorage.getItem("user");

    if (stored) {
      const parsedUser = JSON.parse(stored);
      setUser(parsedUser);
      setLoading(false);

      api
        .get("/auth/me")
        .then((res) => {
          setUser(res.data);
          sessionStorage.setItem("user", JSON.stringify(res.data));
        })
        .catch((err) => {
          if (err.response?.status === 401) {
            sessionStorage.removeItem("user");
            setUser(null);
          } else {
            sessionStorage.removeItem("user");
            setUser(null);
          }
        });
      return;
    }

    api
      .get("/auth/me")
      .then((res) => {
        setUser(res.data);
        sessionStorage.setItem("user", JSON.stringify(res.data));
      })
      .catch((err) => {
        if (err.response?.status === 401) {
          setUser(null);
        } else {
          setUser(null);
        }
      })
      .finally(() => {
        setLoading(false);
      });
  }, []);

  return (
    <AuthContext.Provider value={{ user, loading, setUser }}>
      {children}
    </AuthContext.Provider>
  );
}
